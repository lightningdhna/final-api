generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_DATABASE_URL")
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?
}

model Supplier {
  id   String  @id @default(uuid())
  name String

  products   Product[]
  warehouses Warehouse[]
}

model Product {
  id         String   @id @default(uuid())
  name       String
  date       DateTime
  supplierId String
  price      Int      @default(0)
  note       String?
  weight     Float    @default(0) // Số thực không âm
  volume     Float    @default(0) // Số thực không âm

  supplier   Supplier @relation(fields: [supplierId], references: [id])
  warehouseProducts WarehouseProduct[]
  orders     Order[]
  registrations Registration[]
}

model Warehouse {
  id         String   @id @default(uuid())
  name       String
  locationX  Float    // Tọa độ X (số thực)
  locationY  Float    // Tọa độ Y (số thực)
  capacity   Int      @default(0) // Số nguyên không âm
  timeToLoad Int      @default(0) // Thời gian xử lý tại kho (phút)
  supplierId String

  supplier   Supplier @relation(fields: [supplierId], references: [id])
  warehouseProducts WarehouseProduct[]
  plans      Plan[]
}

model WarehouseProduct {
  warehouseId String
  productId   String
  quantity    Int      @default(0) // Số nguyên không âm

  warehouse   Warehouse @relation(fields: [warehouseId], references: [id])
  product     Product   @relation(fields: [productId], references: [id])

  @@id([warehouseId, productId])
}

model Truck {
  id           String  @id @default(uuid())
  name         String
  type         String
  maxWeight    Float    @default(0) // Số thực không âm
  maxVolume    Float    @default(0) // Số thực không âm
  averageSpeed Float    @default(0) // Số thực không âm
  timeActive   DateTime // Start time
  timeInactive DateTime // End time

  plans        Plan[]
}

model Dropshipper {
  id   String @id @default(uuid())
  name String

  registrations Registration[]
  orders        Order[]
}

model Registration {
  dropshipperId String
  productId     String
  commissionFee Float    // Phí hoa hồng (commission fee)
  createdDate   DateTime @default(now())
  status        Int      // 0: pending, 1: approved, 2: rejected

  dropshipper Dropshipper @relation(fields: [dropshipperId], references: [id])
  product     Product     @relation(fields: [productId], references: [id])

  @@id([dropshipperId, productId])
}

model Order {
  id            String   @id @default(uuid())
  productId     String
  dropshipperId String?  // Thêm dropshipperId (có thể null nếu không phải đơn dropship)
  timeCreated   DateTime
  status        Int      // Có thể dùng enum nếu muốn
  quantity      Int      @default(0) // Số nguyên không âm
  volume        Float    @default(0) // Số thực không âm
  weight        Float    @default(0) // Số thực không âm
  locationX     Float    // Tọa độ X (số thực)
  locationY     Float    // Tọa độ Y (số thực)
  note          String?

  product      Product      @relation(fields: [productId], references: [id])
  dropshipper  Dropshipper? @relation(fields: [dropshipperId], references: [id])
  plans        Plan[]
}

model Plan {
  id           String   @id @default(uuid())
  planDate     DateTime
  status       Int      // 0: waiting, 1: on-going, 2: in progress, 3: completed
  truckId      String
  orderId      String
  type         Int      // 1: load, 2: unload
  warehouseId  String?  // Chỉ cần nếu type = 1
  startTime    DateTime
  executionTime Int     // Đơn vị: phút

  truck        Truck    @relation(fields: [truckId], references: [id])
  order        Order    @relation(fields: [orderId], references: [id])
  warehouse    Warehouse? @relation(fields: [warehouseId], references: [id])
}